exit
params[:email]
c
Bookdetail.where(genre_id = g[1].id).each {|book| puts book.bookname}
Bookdetail.where(genre_id = g[0].id).each {|book| puts book.bookname}
Bookdetail.where(genre_id = g[0].id).each {|book| puts book.name}
Bookdetail.where(genre_id = g[0].id)
Bookdetails.where(genre_id = g[0].id)
g
Bookdetail.where(genre_id = genre.id)
Bookdetails.where(genre_id = genre.id)
@books
n
@books = []
@books
books = []
g.each { |genre| puts genre.genre }
g.each { |genre| genre.genre }
g.each { |genre| genre.name }
g.each do |genre|
g
exit
params[:user][:selectedGenre]
exit
params[:user][:genre]
exit
params[:email]
exit
params
:data
data
params[:data]
query
quer
params[:query]
params[:details][:id]
params[:detail][:id]
params[:detail]
params[:details]
params[:email]
params[:key]
params[:id]
exit
params[:email]
params[:value]
params[:key]
params[:data]
params[:id]
exit
params[:id]
exit
params[:id]
params[data]
data
:data
params[:data]
params[:details][:data]
params[:detail][:data]
exit
params[:bookdetail][:bookname]
exit
params[:email]
params[:username]
user = User.find_by_email(params[:username])
params[:password]
exit
password_digest:params[:user][:password]
password_digest
params[:user][:password]
exit
user.authenticate(params[:password])
if user && user.authenticate(params[:password])
 token = JsonWebToken.encode(user_id: user.id)
params[:password]
exit
clear
User.authenticate(email,password)
password
email
continue
params[:password]
params[:username]
params[:grant_type][:email]
params[:sessions][:email]
params[:user][:email]
params[:session][:email]
params[:email]
